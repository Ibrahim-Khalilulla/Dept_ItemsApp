@model Dept_ItemsApp.Models.Dept_Items


<h2>Create: @ViewBag.sid</h2>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Dept_Items</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-sm-4">
            <h2>Department Table</h2>
            <div class="form-group">
                @Html.LabelFor(model => model.DeptId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeptId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeptName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeptName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeptName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-sm-8">
            <div id="items"></div>
            <h2>Items Table</h2>
            <div class="form-group">
                @Html.LabelFor(model => model.ItemCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="date" name="date" id="date" class="form-control" />
                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <input type="file" name="picture" id="picture" />
            </div>

            <button type='button' id="add" class="btn btn-default">Add</button>
        </div>
        <h2 style="color:orange">@ViewBag.DeptError</h2>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type='button' id="save" class="btn btn-lg btn-default btn-primary">Save</button>
                <button type='button' id="deleteall" class="btn btn-lg btn-default btn-primary">Delete</button>
                <input type="submit" value="Create" class="btn btn-default" style="display:none" />
            </div>


        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    var gvar = "";
    var act = [];
    $(document).ready(function () {
       
       
        var index = -1;
        // alert(localStorage.getItem('test'));
        //// $("#DeptId").val(localStorage.getItem('test'));
        let searchParams = new URLSearchParams(window.location.search)
        // alert(searchParams.has('sid'));
        if (searchParams.has('sid')) {
            // alert(searchParams.get('sid'));
            $("#DeptId").val(searchParams.get('sid'));
            deptChange();
        }
        else {
            $.ajax('/dept2/GenerateCodeDP/',
                {
                    method: 'get',
                    timeout: 500,
                    success: function (data, status, xhr) {
                        //alert(data);
                        $("#DeptId").val(data)
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        $('#out').html('Error: ' + errorMessage);
                    }
                });
        }

        // alert(gvar);
        //$("#DeptId").val(gvar);
        //deptChange();
        //$("#DeptId").keyup(function () {
        //    $("#DeptId").keyup();
        //});
        $("#DeptId").on("change paste keyup", function () {
            deptChange();

        });
        function deptChange() {
            $.ajax('/dept2/GetDept/' + $("#DeptId").val(),
                {
                    dataType: 'json',
                    method: 'get',
                    timeout: 500,
                    success: function (data, status, xhr) {

                        // alert(data.length);
                        if (data != "") {
                            $("#DeptName").val(data[0].deptname);
                            $("#Location").val(data[0].location);


                            showItems();

                            $.ajax('/dept2/GenerateCodeItems/',
                                {
                                    method: 'get',
                                    timeout: 500,
                                    success: function (data, status, xhr) {
                                        // alert(data);
                                        $("#ItemCode").val(data)
                                    },
                                    error: function (jqXhr, textStatus, errorMessage) {
                                        $('#out').html('Error: ' + errorMessage);
                                    }
                                });
                        }
                        

                        else {
                            $("#DeptName").val("");
                            $("#Location").val("");


                            showItems();
                        }


                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        $('#out').html('Error: ' + errorMessage);
                    }
                });
        }
        function showItems() {
            $.ajax('/dept2/GetItems/' + $("#DeptId").val(),
                {
                    dataType: 'json',
                    method: 'get',
                    timeout: 500,
                    success: function (data, status, xhr) {
                        act = data;
                        // alert(act);
                        items(2);
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        $('#out').html('Error: ' + errorMessage);
                    }
                });
        }
        function items(srv) {
            var j = 0;
            var a = "<table class='table'><tr><th>Code</th><th>Name</th><th>Cost</th><th>Sale</th><th>Date</th><th>Picture</th><th></th></tr>";
            for (d in act) {
                if (srv != 1) {
                    value = new Date(parseInt(act[d].date.replace("/Date(", "").replace(")/", ""), 10));
                    var dd = String(value.getDate()).padStart(2, '0');
                    var mm = String(value.getMonth() + 1).padStart(2, '0'); //January is 0!
                    var yyyy = value.getFullYear();

                    today = yyyy + "-" + mm + "-" + dd;
                    act[d].date = today;
                }
                else
                    today = act[d].date;


                a += `<tr><td>${act[d].itemcode}</td><td>${act[d].itemname}</td><td>${act[d].cost}</td><td>${act[d].rate}</td><td>${today}</td><td><img src='/uploads/${act[d].picture}' width='100'/></td><td><button type='button' onclick="edit1('${act[d].itemcode}','${act[d].itemname}','${act[d].cost}','${act[d].rate}',${j},'${today}','${act[d].picture}')">Edit</button><button type='button' onclick="remove(${j})">Remove</button></td></tr>`;
                j++;
            }
            a += "</table>";
            $("#items").html(a);
        }
    $("#add").click(function () {
        var dt = $("#date").val();// new Date($("#date").val());
        if ($("#add").html() == "Add") {

            if (window.FormData !== undefined) {

                var fileUpload = $("#picture").get(0);
                var files = fileUpload.files;
                var fname = files[0].name
                // Create FormData object
                var fileData = new FormData();

                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }

                // Adding one more key to FormData object
                fileData.append('username', 'Manas');

                $.ajax({
                    url: '/dept2/UploadFiles',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {
                        // alert(result+"  "+fname);

                        act.push({ "itemcode": $("#ItemCode").val(), "itemname": $("#ItemName").val(), "cost": $("#Cost").val(), "rate": $("#Rate").val(), "date": dt, "picture": fname });
                        items(1);
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });
            } else {
                alert("FormData is not supported.");
            }


// alert($("#date").val() + "  " + $("#picture").val());

            }
            else {
                //alert("here");
            v = { "itemcode": $("#ItemCode").val(), "itemname": $("#ItemName").val(), "cost": $("#Cost").val(), "rate": $("#Rate").val(), "date": dt, "picture": $("#picture").val().split('\\').pop() };
            act[index] = v;
            items(1);
                $("#add").html("Add");
            }
            // alert(act.length);
           
        });

        $("#deleteall").click(function () {
            $.ajax('/dept2/DeleteAll/' + $("#DeptId").val(),
                {
                    dataType: 'json',
                    method: 'get',
                    timeout: 500,
                    success: function (data, status, xhr) {
                       
                       
                            act = [];
                        items(1);
                        window.location = '/dept2/showme/'
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        $('#out').html('Error: ' + errorMessage);
                    }
                });

        });

        $("#save").click(function () {
            var i = 0;
          //  alert($("#DeptId").val());
            $.ajax('/dept2/DeleteAll/' + $("#DeptId").val(),
                {
                    dataType: 'json',
                    method: 'get',
                    timeout: 500,
                    success: function (data, status, xhr) {


                        url = `deptid=${$("#DeptId").val()}&deptname=${$("#DeptName").val()}&location=${$("#Location").val()}`;
                       // alert('/dept2/InsertDept?' + url);
                        $.ajax('/dept2/InsertDept?' + url,
                            {
                                dataType: 'json',
                                method: 'get',
                                timeout: 500,
                                success: function (data, status, xhr) {


                                    for (d in act) {

                                        url1 = `itemcode=${act[d].itemcode}&itemname=${act[d].itemname}&deptid=${$("#DeptId").val()}&cost=${act[d].cost}&rate=${act[d].rate}&date=${act[d].date}&picture=${act[d].picture}`;
                                       //  alert('/dept2/Insertitems?' + url1);
                                        $.ajax('/dept2/Insertitems?' + url1,
                                            {
                                                dataType: 'json',
                                                method: 'get',
                                                timeout: 500,
                                                success: function (data, status, xhr) {
                                                    i++;
                                                    //    alert(i + "  " + act.length)
                                                    if (i == act.length) {
                                                        act = [];
                                                        items(1);
                                                        window.location = "/dept2/showme";

                                                    }
                                                },
                                                error: function (jqXhr, textStatus, errorMessage) {
                                                    $('#out').html('Error: ' + errorMessage);
                                                }
                                            });



                                    }





                                },
                                error: function (jqXhr, textStatus, errorMessage) {
                                    $('#out').html('Error: ' + errorMessage);
                                }
                            });





                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        $('#out').html('Error: ' + errorMessage);
                    }
                });
        });
        remove = function (j) {
            act.splice(j, 1);
            items(1);
        }
        edit1 = function (a, b, c, d, e,f,) {
            //alert("OK")
            $("#ItemCode").val(a);
           // b = b.replace("\"", "\\\"");
            $("#ItemName").val(b);
            $("#Cost").val(c);
            $("#Rate").val(d);
            $("#date").val(f);
           // alert(e)
            $("#add").html("Edit");
            index = e
           
        }
    })
</script>

